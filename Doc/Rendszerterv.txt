TRYHARD
Rendszerterv


A korábbiakban elkészült Követelmény specifkácó és Funkcionális specifikáció
alapján az alábbiakban a szoftver Rnedszertervét ismertetjük.


1. A projekt tervezete
----------------------

A szoftver egy kisvárosi könyvkölcsönző működését hivatott elősegíteni.
Célja az analóg rendszer digitálisra cserélése. Adminisztratív és egyébb
feladatok ellátása számítógépes környezetben. A cél platformunk a kölcsönző
tulajdonában lévő számítógépek mely Linux alapú operációs rendszer futtatnak,
név szerint az Ubuntut. A megvalósítás miatt a program alkalmas lehet más
operációs rendszer alatti futtatásra is, de ez nem elsődleges célja a
fejlesztésnek. A gépek hardverje 8 GB DDR4 -es RAMból, egy Intel
Core i7-8750H 2.20GHz típusú processzorból és egy NVIDIA GeForce GTX 1060
típusú videókártyából állnak. A gépek számára biztosítvav van a stabil 10Mb/s
sávszélességű internet elérés. A gépeket a kölcsönző dolgozói használhatják.
Szándékunkban áll többféle jogosultságokkal rendelkező felhasználókat
implementálni, és az adatbázist több munkaállomásról is eléhetővé tenni
a helyi hálózaton. A rendszer felépítése egy szerver-kliens alapokra épülő
modell, egy közös H2 adatbázis motorral rendelkező adatbázison, amely
tárolja az elérhető könyveket, illetve az ügyfelek alapvetően szükséges
adatait. Mivel a rendszerünket az első fázisban nem készítjük fel a külső
támadások kivédésére, csak belső, tűzfallal elzárt privát hálózaton javasoljuk
a használatát. Ezzel megelőzhetjük a személyes adatok kiszivárgását.
Emiatt a felhasználási mód miatt jelenleg az ügyfelek számára csak közvetett
regisztráció elérhető, így a GDPR tájékoztatót javasolt papir alapon 1
példányban hitelesítve tárolnim illetve egyet az ügyfélnek adni, így
megfelelő bizonyító erővel bír problémák felmerülésekor. A rendszer ezen
megvalósításában alkalmas az megfelelő rekordok lekérdezésére, módosítására,
törlésére. Ezen funkciók elosztására a különböző jogosultságú felhasználók
közt később térünk ki.

2. A rendszer felépítése
-------------------------

A kiszolgáló egy Tomcat szerver lesz, amely eléri a szervergépen lévő
adatbázist, feldolgozza a kéréseket, majd végrehajtja a megfelelő módosításokat
az adatokon. Mivel a rendszer belső privát hálózaton működik, a jelen
iterációban jelszó hashelést nem tervezünk implementálni a felhasználói
loginoknál, ezért későbbi webes felhasználás esetén ez rendkívüli fontosságú
feladat. Mivel a rendszer a szerveren fut, a programból gyakorlatilag egy
példány szükséges a szerveren, a többi gép a böngészőből éri el a felületet.
Az adatbázis kapcsolathoz szükséges egy adatbázis connection osztály,
amely létrehozza, fenntartja, és zárja az adatbáziskapcsolatot.
 A funkciókhoz szükség van servlet osztályokra, amelyek felelnek a megfelelő
kérések felépítéséért. A felhasználóval való kommunikációt html-ben íródott
interface valósítja meg, ezek praktikusan külső fájlokból, és forrásból
módosított részekből állnak. Ennek a megoldásnak köszönhetően a felhasználók
használhatnak saját megjelenési stílusokat is, a böngészőn keresztül. Az
adatbázis miatt a rendszer egy esetleges szerver leállás után is perzisztens
marad, és a szolgáltatás is visszaáll újraindítást követően, így az esetleges
folyamatban lévő tranzakciókat leszámítva az adatok nem vesznek el.
 Az adatbázisnak két lényegi táblája a könyveket, és az ügyfeleket tartalmazza.
A kölcsönzés megvalósításához szükség van egy kapcsolótáblára is, amelynek
rekordjai egy egy kölcsönzési folyamatot ábrázolnak, a kölcsönző azonosítójával,
a kölcsönzött könyv azonosítójával,valamint a kölcsönzési dátummal, és a
határidővel, visszahozási dátummal. A könyvek táblában eltároljuk a példány
azonosítóját, könyvtári azonosítóját (ami nem unique), címét, szerzőjét,
kiadóját, kiadás évét, illetve hogy épp elérhető-e. Az tag táblában az
adott személy kereszt és vezetéknevét, születési dátumát, lakcímét,
illetve az egyedi azonosítóját tároljuk.

Könyv
+------------------------------------------+
|	ID Primary key, unique INTEGER         |
|	LibID VARCHAR						   |
|	Szerzo VARCHAR                         |
|	Cim  VARCHAR                           |
|	Kiado VARCHAR						   |
|	KiadasEve DATE                         |
|	Elerheto BOOLEAN					   |
+------------------------------------------+
Tag
+------------------------------------------+
|	ID Primary key, unique INTEGER         |
|	Vezeteknev VARCHAR                     |
|	Keresztnev VARCHAR					   |
|	Születési datum  DATE                  |
|	Lakcim VARCHAR 						   |
+------------------------------------------+
Kölcsönzés
+------------------------------------------+
|	KolcsonzesID PRIMARY KEY, UNIQUE       |
|	KonyvID FOREIGN KEY(KONYV.ID) INTEGER  |
|	TagID FOREIGN KEY(TAG.ID) INTEGER      |
|	KolcsonzesDatum  DATE                  |
|	Hatarido DATE						   |
|	VisszahozasDatum DATE				   |
+------------------------------------------+




/*Draft
A könyvtárnak egy HTML UI-val rendelkező applikáció szügséges ami egy 
adatbázisban (valószínűleg h2)tárolja a könyvtárban rendelkezésre álló 
könyvekei illetve a kölcsönzésre kiadott könyveket. Opcionálisan a tagok
adatbázisban való tárolása is megvalósítható.
Adhatunk hozzá egy 3. táblát is mint settings itt név érték párokat tárolhatnánk
pl hogy mennyi egy kölcsönzési határidő vagy ami még eszünkbe jut,
mert akkor ezek sem hardcoded propertyk lennének, ami jól mutatna ebben a
doksiban mint feature, illetve a többuseres dolgot kellene még kifejteni
a spéci jogokkal, meg a szükséges dependencyket, illetve lehetne egy ilyen
mvc package felosztást is csinálni a backend a dbvel mint modell, az ide tartozó
java classok pl util/modell packageben mint dbutil meg ami még közben jöhet, a
html css mint view, és a servlet mint controller, csak ihletnek.
*/
